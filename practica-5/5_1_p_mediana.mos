!@encoding CP1252
model "5_1_p_mediana"
	uses "mmxprs";
	
	! DECLARACIONES
	declarations
		n 			= 12;
		m 			= 12;
		p_servicio	= 1..n;
		p_demanda	= 1..m;
		
		d			: array(p_demanda, p_servicio) of integer;
		h			: array(p_demanda) of integer;
		
		y			: array(p_demanda, p_servicio) of mpvar;
		x			: array(p_servicio) of mpvar;
	end-declarations
	
	! INICIALIZACION
	initializations from "data/5_1_p_mediana.dat"
		d;
		h;
	end-initializations
	
	! MODELO
	! Variables binarias para x e y
	forall(j in p_servicio)
		x(j) is_binary;
	forall(i in p_demanda, j in p_servicio)
		y(i,j) is_binary;
	
	! Todos los puntos de demanda quedan cubiertos
	forall(i in p_demanda)
		cubrimiento(i) := sum(j in p_servicio) y(i,j) = 1;
	
	forall(i in p_demanda, j in p_servicio)
		res(i,j) := y(i,j) <= x(j);
	
	! Valor a minimizar
	z := sum(i in p_demanda) sum(j in p_servicio) h(i) * d(i,j) * y(i,j);
	
	writeln("Práctica 5.1 P-mediana (n=", n, ", m=", m, "):");
	forall(P in 1..12)do
		! Numero de instalaciones
		num_instalaciones := sum(j in p_servicio) x(j) = P;
		minimize(z);
	
		! SALIDA
		writeln("P = ", P, "\tz = ", getobjval);
		writeln("\tDistancia promedio = ", getobjval / sum(i in p_demanda) h(i));
		writeln("\tDistancia máxima = ", max(i in p_demanda, j in p_servicio | y(i,j).sol = 1) d(i,j));
	end-do	
end-model
